{"posts":[{"title":"【C++ Primer】学习笔记1","text":"[C++ Primer]学习笔记11.C++中的输入与输出C++语言未定义任何输入与输出(IO)的语句，而包含了一个标准库来提供IO机制。大部分示例使用的是iostream这个标准库，其包含了4个IO对象。其中有：(1)istream—-cin(输入)(2)ostream—-cout(输出)(3)ostream—-cerr(输出错误和警告信息)(4)ostream—-clog(输出程序运行时的一般信息)值得注意的是，istream和ostream分别表示输入输出流（一个字符序列）。这个流的写入使用&gt;&gt;(输入运算符)，输出用&lt;&lt;(输出运算符)。而这两个运算符在使用时，左边都需要是一个ostream/istream对象，右边都需要是要输入或输出的值。例如说：std::cout &lt;&lt; &quot;Hello,world!&quot; &lt;&lt; endl;std::cin &gt;&gt; a1;输出与输入运算符相似的地方在于：他们都是以左边为左侧运算对象，再接受一个对象作为其右侧运算对象。二者返回其左侧运算对象作为其计算结果(如cout &lt;&lt; &quot;Hello,world!&quot;返回的是一个ostream，因此可以继续运算)。再举一个例子就容易理解：cout &lt;&lt; &quot;Hello,world!&quot; &lt;&lt; &quot;hello&quot; &lt;&lt; ...我们可以一直在其右侧继续运算，因为左侧一直都是一个ostream对象。同时还需要注意的是endl这个操纵符，它的作用是结束当前行，并将与设备关联的缓冲区的内容刷到设备中（其实就是保证之前的cout准确的输出出去，不要停留在缓冲区中）。 2.注释需要注意的地方注释有两种：(1)单行注释//(2)注释界定符/* /*，以/*开始，以*/结束。需要注意的是注释界定符不能嵌套。举个例子：cout &lt;&lt; /* &quot;*/&quot; */ 其等同于 cout &lt;&lt; &quot; */，因为其中的部分内容被注释掉了。 3.控制流(for与while)仅记录值得注意的点：(1) while(i++){}，i在进入while之后，就会++，而不是执行完整个while。(2)for(int i=n(正整数);i&lt;=0;i--)，这种语句没有尽头，会一直执行，在写for的时候初始化需要注意。(3)while与for的优缺点：for循环语句的控制变量初始化和修改在句首，简洁直观，适用于循环次数已知的情况，而while语句的控制变量初始化通常在循环结构体外，修改在循环结构体内，适用于未知循环次数的情况。 4.C++语言的数据类型问题C++是一种静态数据类型语言，它的类型检查发生在编译的时候，因此编译器必须知道每个变量对应的数据类型，而python这类语言是动态的，在程序运行时检查数据类型。 5.C++的基本内置类型C++定义了一套算数类型和空类型。算数类型包括2类：整形(包括字符和布尔类型)和浮点型。下表记列出了C++标准规定的尺寸的最小值，同时允许编译器赋予这些类型更大的尺寸。 类型 含义 最小尺寸 bool 布尔类型 未定义 char 字符 8位(机器字节） short 短整形 16位 int 整形 16位 long 长整形 32位 long long 长整形 64位 float 单精度浮点数 6位有效数字 double 双精度浮点数 10位有效数字 long double 扩展精度浮点数 10位有效数字 C++语言规定short&lt;=int&lt;=long&lt;=long long；float-32bit，double-64bit。 选择数据类型的准则：(1)明确知晓数据不可能为负数时，选用无符号类型。(2)进行整数运算时，要么选int，要么选long long。一般short太小，long和int有一样的尺寸，所以用long long。(3)进行浮点运算时尽量选用double，因为float通常精度不够，并且二者的计算代价相差不多。 类型转换的一些注意事项unsigned char c = -1;，当我们赋给无符号类型一个超出它表示范围的值时，结果是初始值对无符号类型表示数值总数取模后的余数。此句中c = -1%256 = -1+256 = 255;signed char c2 = 256;,当我们赋给一个有符号类型一个超出它表示范围的值时，结果是未定义的。 123unsigned u =10;int i = -42;cout &lt;&lt; u+i &lt;&lt; endl; //如果int占32位，那么输出4294968264 解释：当一个算数表达式中既有int和无符号数时，会将int转化为无符号数。把负数转化为无符号数类似于直接给无符号数赋予一个负值，结果等于: -42+2^32。","link":"/2022/08/01/%5BC++%20Primer%5D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"},{"title":"【博客搭建】 如何搭建属于自己的博客","text":"因本人电脑较多，安装博客环境需要重复几次，在此记录下搭建博客的过程，用以自己复习避免采坑。 环境安装准备1.Node.js首先打开Node.js的官方网址 选择左边的LTS，然后一路next即可安装完成。然后测试Node是否安装成功，Win+R,打开cmd后输入node -v，npm -v,看是否返回版本号。 2.Git打开Git的官方网址,选择windows下载即可。安装Git时：选择安装目录后选择安装组件，选择依据自己选择。注：图片出处然后一路next即可。 3.搭建hexoWin+R，打开cmd后输入npm install -g cnpm --registry=https://registry.npm.taobao.org，选择淘宝的镜像源，提高下载速度。cnpm install -g hexo-cli，开始安装hexo。刚开始，cmd会定位在c盘中，如果我们想要将hexo中的文件放在其他盘(D盘)就需要定位到其他盘中，输入：D:,然后输入：mkdir D:\\blog，创建一个名为blog的空文件夹。 然后输入：cd: D:\\blog将位置定在blog文件中，输入hexo init初始化hexo。 输入：hexo s，来创建我们的博客环境，此时在浏览器中输入:localhost:4000就可以进入我们的hexo中了。 4.部署博客在github上 打开我们自己的github，然后右上角选择New repository，创建新的子仓库。 部署个人博客的时候命名必须与github账户原名符合，如我的是ginmanzzz，那就要输入ginmanzzz.github.io 然后继续在cmd中输入：npm install hexo-deployer-git --save来安装hexo的安装插件。 安装完成后我们自己手动打开blog的目录，找到其中的config.yml并用vscode打开。在文件的结尾更改为如下方式： 注意冒号后面有空格，不能缺少。 然后输入git config --global user.email &quot;和git config --global user.name &quot;xxx&quot;，其中xxx分别是你的github的email和name。 最后输入hexo d将现在的文件推送上去，这样博客系统就部署好了。","link":"/2022/07/31/my-First-Blog/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/07/31/hello-world/"}],"tags":[],"categories":[],"pages":[]}